name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: |
            git clone -b 'v0.2.13-p0' --single-branch --depth 1 https://github.com/Dobiasd/FunctionalPlus
            cd FunctionalPlus
            mkdir -p build && cd build
            cmake ..
            make && sudo make install
            cd ../..

            git clone -b '3.3.9' --single-branch --depth 1 https://gitlab.com/libeigen/eigen.git
            cd eigen
            mkdir -p build && cd build
            cmake ..
            make && sudo make install
            sudo ln -s /usr/local/include/eigen3/Eigen /usr/local/include/Eigen
            cd ../..

            git clone -b 'v3.9.1' --single-branch --depth 1 https://github.com/nlohmann/json
            cd json
            mkdir -p build && cd build
            cmake -DBUILD_TESTING=OFF ..
            make && sudo make install
            cd ../..

            git clone https://github.com/Dobiasd/frugally-deep
            cd frugally-deep
            mkdir -p build && cd build
            cmake ..
            make && sudo make install
            cd ../..

            cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
